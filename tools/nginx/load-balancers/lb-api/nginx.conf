# =================================================================================================
# NGINX Load Balancer Configuration - API
# =================================================================================================
#
# Shared logging formats and settings
include /etc/nginx/snippets/logging.conf;

# This load balancer handles traffic for API services.
# It can distribute requests across multiple API service instances.
#
# Architecture:
# - Receives traffic from the edge proxy on port 8080
# - Load balances requests to API service instances
# - Implements health checks and circuit breaking
# - Supports REST APIs and GraphQL endpoints
#
# =================================================================================================

# Upstream Configuration - API Service Pool
upstream api_services {
    # Shared memory zone
    zone api_services 64k;

    # Use least_conn for better distribution across varying request loads
    least_conn;

    # API service instances
    # Add more servers as you scale horizontally
    server my-nest-js-email-microservice:3000 max_fails=3 fail_timeout=30s weight=1;

    # Additional API instances (uncomment when scaling):
    # server api-service-2:3000 max_fails=3 fail_timeout=30s weight=1;
    # server api-service-3:3000 max_fails=3 fail_timeout=30s weight=1;

    # Keep-alive connections
    keepalive 64;
    keepalive_timeout 60s;
    keepalive_requests 100;
}

# Server Block - API Load Balancer
server {
    listen 8080;
    listen [::]:8080;

    server_name lb-api;

    # Include security headers
    include /etc/nginx/snippets/headers.conf;

    # Add custom header
    add_header X-Load-Balancer "lb-api" always;

    # Health check for this load balancer
    location /health {
        access_log off;
        return 200 "lb-api:healthy\n";
        add_header Content-Type text/plain;
    }

    # Upstream health check
    location /upstream/health {
        access_log off;
        proxy_pass http://api_services/health;
        proxy_connect_timeout 2s;
        proxy_read_timeout 2s;
    }

    # GraphQL endpoint (if applicable)
    location /graphql {
        # Increase limits for GraphQL queries
        client_max_body_size 10M;

        proxy_pass http://api_services;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # GraphQL queries may take longer
        proxy_connect_timeout 90s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;

        # Buffer configuration
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 8k;
    }

    # REST API endpoints
    location /api/ {
        proxy_pass http://api_services;

        # Forward headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;

        # HTTP/1.1 for keep-alive
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Timeout configuration
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer configuration
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # Authentication endpoints
    location /api/auth/ {
        proxy_pass http://api_services;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Stricter timeouts for auth
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Don't cache auth responses
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # File upload endpoints
    location /api/upload/ {
        # Larger body size for file uploads
        client_max_body_size 50M;

        proxy_pass http://api_services;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Extended timeouts for uploads
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;

        # Request buffering for uploads
        proxy_request_buffering off;

        # Larger buffers
        proxy_buffering on;
        proxy_buffer_size 16k;
        proxy_buffers 8 16k;
    proxy_busy_buffers_size 64k;
    }

    # Catch-all for any other API requests
    location / {
        proxy_pass http://api_services;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        error_page 502 503 504 /50x.html;
    }

    # Error page
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Include environment-specific overlays
include /etc/nginx/conf.d/overlays/*.conf;
