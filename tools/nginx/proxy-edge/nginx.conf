# =================================================================================================
# NGINX Edge Proxy Configuration
# =================================================================================================
#
# This is the main configuration file for the edge reverse proxy server.
# It serves as the entry point for all external traffic and routes requests to the appropriate
# load balancer based on hostname or path patterns.
#
# Architecture:
# - Receives external traffic on ports 80 (HTTP) and 443 (HTTPS)
# - Terminates TLS/SSL connections
# - Routes traffic to internal load balancers:
#   - lb-frontend: For frontend application requests
#   - lb-api: For API requests
#   - lb-email: For email service requests
#
# =================================================================================================

# Shared logging formats and settings
include /etc/nginx/snippets/logging.conf;

# Upstream Configuration - Load Balancer Nodes
# These upstreams point to the internal load balancers
# Each load balancer handles a specific application tier

upstream lb_frontend {
    # Shared memory zone for statistics and health checks
    zone lb_frontend 64k;

    # Load balancer for frontend applications (Next.js app)
    server lb-frontend:8080 max_fails=3 fail_timeout=30s;

    # Enable keepalive connections to upstream for better performance
    keepalive 32;
}

upstream lb_api {
    # Shared memory zone for statistics and health checks
    zone lb_api 64k;

    # Load balancer for API services
    server lb-api:8080 max_fails=3 fail_timeout=30s;

    # Enable keepalive connections to upstream for better performance
    keepalive 32;
}

upstream lb_email {
    # Shared memory zone for statistics and health checks
    zone lb_email 64k;

    # Load balancer for email microservice
    server lb-email:8080 max_fails=3 fail_timeout=30s;

    # Enable keepalive connections to upstream for better performance
    keepalive 32;
}

# Map Configuration - Dynamic Upstream Selection
# Routes requests to the appropriate load balancer based on hostname
map $host $lb_upstream {
    # Default to frontend load balancer
    default lb_frontend;

    # Route API subdomain to API load balancer
    ~^api\. lb_api;

    # Route email subdomain to email load balancer
    ~^email\. lb_email;

    # Internal hostnames for Docker Compose networking
    api.internal lb_api;
    email.internal lb_email;
}

# HTTP Server Block - Port 80
# Handles plain HTTP traffic
# In production, this should redirect to HTTPS
server {
    listen 80;
    listen [::]:80;

    server_name _;

    # Include security headers
    include /etc/nginx/snippets/headers.conf;

    # Health check endpoint for the edge proxy itself
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Readiness check endpoint
    location /ready {
        access_log off;
        return 200 "ready\n";
        add_header Content-Type text/plain;
    }

    # Main proxy location
    location / {
        # Route to the appropriate upstream based on host mapping
        proxy_pass http://$lb_upstream;

        # Preserve original host header
        proxy_set_header Host $host;

        # Forward real client IP
        proxy_set_header X-Real-IP $remote_addr;

        # Forward proxy chain
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Forward protocol (http or https)
        proxy_set_header X-Forwarded-Proto $scheme;

        # Forward original request URI
        proxy_set_header X-Original-URI $request_uri;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Buffering settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # Error page location
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# HTTPS Server Block - Port 443
# Handles TLS/SSL encrypted traffic
# Uncomment and configure when TLS certificates are available
#
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#
#     server_name _;
#
#     # TLS Certificate Configuration
#     ssl_certificate /etc/nginx/tls/cert.pem;
#     ssl_certificate_key /etc/nginx/tls/key.pem;
#
#     # TLS Protocol Configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#     ssl_prefer_server_ciphers off;
#
#     # TLS Session Configuration
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_session_tickets off;
#
#     # OCSP Stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     resolver 8.8.8.8 8.8.4.4 valid=300s;
#     resolver_timeout 5s;
#
#     # Include security headers
#     include /etc/nginx/snippets/headers.conf;
#
#     # Include logging configuration
#     include /etc/nginx/snippets/logging.conf;
#
#     # Health check endpoint
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
#
#     # Main proxy location (same as HTTP server)
#     location / {
#         proxy_pass http://$lb_upstream;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Original-URI $request_uri;
#
#         # WebSocket support
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection $connection_upgrade;
#
#         # Buffering settings
#         proxy_buffering on;
#         proxy_buffer_size 4k;
#         proxy_buffers 8 4k;
#
#         # Timeout settings
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#
#         # Error handling
#         proxy_intercept_errors on;
#         error_page 502 503 504 /50x.html;
#     }
#
#     location = /50x.html {
#         root /usr/share/nginx/html;
#         internal;
#     }
# }

# WebSocket upgrade connection mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Include environment-specific overlays
# These files can override or extend the configuration above
include /etc/nginx/conf.d/overlays/*.conf;
