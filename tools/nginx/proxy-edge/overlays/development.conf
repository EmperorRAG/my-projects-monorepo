# =================================================================================================
# Development Overlay Configuration - Edge Proxy
# =================================================================================================
#
# This overlay file provides development-specific configuration for the edge proxy.
# It extends or overrides the base nginx.conf settings for local development.
#
# Features:
# - Detailed logging for debugging
# - Relaxed timeouts for development
# - Additional debugging headers
# - CORS enabled for local development
#
# This file is automatically included by the main nginx.conf when running in development mode.
# =================================================================================================

# Enable detailed access logging in development
access_log /dev/stdout detailed;

# Set error log to info level for more verbose debugging
error_log /dev/stderr info;

# Development-specific server configuration
server {
    listen 8080;
    server_name dev.local localhost 127.0.0.1;

    # Add debug header to identify the proxy
    add_header X-Proxy-Node "edge-proxy-dev" always;
    add_header X-Environment "development" always;

    # CORS headers for local development
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, X-CSRF-Token" always;
    add_header Access-Control-Max-Age "3600" always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Health endpoint aligned with container health check
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Development health endpoint with more details
    location /dev/health {
        access_log off;
        default_type application/json;
        return 200 '{"status":"healthy","environment":"development","node":"edge-proxy","upstreams":["lb-frontend","lb-api","lb-email"]}';
    }

    # Proxy to upstreams with extended timeouts for debugging
    location / {
        proxy_pass http://$lb_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Extended timeouts for development/debugging
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Disable buffering for real-time debugging
        proxy_buffering off;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}

# =================================================================================================
# Development Tips:
# =================================================================================================
#
# 1. Access the development proxy at: http://localhost:8080
# 2. Check health status at: http://localhost:8080/dev/health
# 3. View real-time logs: docker compose logs -f proxy-edge
# 4. Test routing by setting Host header: curl -H "Host: api.internal" http://localhost:8080
# 5. Debug WebSocket connections with extended timeouts
#
# =================================================================================================
