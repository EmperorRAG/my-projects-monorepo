# =================================================================================================
# Production Overlay Configuration - Edge Proxy
# =================================================================================================
#
# This overlay file provides production-specific configuration for the edge proxy.
# It extends or overrides the base nginx.conf settings for production deployment.
#
# Features:
# - Optimized logging (excludes health checks)
# - Strict security headers
# - Rate limiting
# - Connection limits
# - Performance optimizations
#
# This file is automatically included by the main nginx.conf when running in production mode.
# =================================================================================================

# Production logging - use JSON format for log aggregation
access_log /dev/stdout json_combined;
error_log /dev/stderr warn;

# Rate limiting zones
# Limits requests per IP address to prevent abuse
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;

# Connection limit zone
# Limits concurrent connections per IP address
limit_conn_zone $binary_remote_addr zone=addr_conn_limit:10m;

# Map for excluding health checks from logs
map $request_uri $loggable {
    ~^/health 0;
    ~^/ready 0;
    ~^/healthz 0;
    default 1;
}

# Production server configuration
server {
    listen 80;
    listen [::]:80;
    server_name _;
    
    # Redirect all HTTP traffic to HTTPS in production
    return 301 https://$host$request_uri;
}

# Production server configuration - HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;
    
    # TLS Configuration
    include /etc/nginx/snippets/tls.conf;
    
    # Apply connection limits
    limit_conn addr_conn_limit 10;
    
    # Production-specific headers
    add_header X-Proxy-Node "edge-proxy-prod" always;
    add_header X-Environment "production" always;
    
    # HSTS - Force HTTPS for 1 year (including subdomains)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Include standard security headers
    include /etc/nginx/snippets/headers.conf;
    
    # Health check - excluded from logs
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Load balancer health check proxies
    location = /health/lb-frontend {
        access_log off;
        proxy_pass http://lb-frontend:8080/health;
        proxy_connect_timeout 2s;
        proxy_read_timeout 2s;
        proxy_intercept_errors on;
        error_page 502 503 504 = @lb_unhealthy;
    }

    location = /health/lb-api {
        access_log off;
        proxy_pass http://lb-api:8080/health;
        proxy_connect_timeout 2s;
        proxy_read_timeout 2s;
        proxy_intercept_errors on;
        error_page 502 503 504 = @lb_unhealthy;
    }

    location = /health/lb-email {
        access_log off;
        proxy_pass http://lb-email:8080/health;
        proxy_connect_timeout 2s;
        proxy_read_timeout 2s;
        proxy_intercept_errors on;
        error_page 502 503 504 = @lb_unhealthy;
    }

    # Error handler for unhealthy load balancers
    location @lb_unhealthy {
        return 503 "unhealthy\n";
        add_header Content-Type text/plain;
    }
    
    # API endpoints - stricter rate limiting
    location /api/ {
        # Apply rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        
        # Proxy to API load balancer
        proxy_pass http://lb_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Production timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enable buffering for better performance
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Login endpoints - very strict rate limiting
    location /api/auth/login {
        # Apply strict rate limiting for login attempts
        limit_req zone=login_limit burst=3 nodelay;
        
        proxy_pass http://lb_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Email service endpoints
    location /email/ {
        # Apply general rate limiting
        limit_req zone=general_limit burst=15 nodelay;
        
        # Proxy to email load balancer
        proxy_pass http://lb_email;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Email-specific timeout (may need longer for attachments)
        proxy_connect_timeout 90s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;
    }
    
    # All other traffic - general rate limiting
    location / {
        # Apply general rate limiting
        limit_req zone=general_limit burst=20 nodelay;
        
        # Proxy to frontend load balancer
        proxy_pass http://$lb_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Production timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enable buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }
    
    # Custom error page
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}


#
# Before deploying to production:
# 1. ✓ Configure TLS certificates
# 2. ✓ Enable HTTPS redirect
# 3. ✓ Adjust rate limits based on expected traffic
# 4. ✓ Configure log aggregation (ELK, Splunk, etc.)
# 5. ✓ Set up monitoring and alerting
# 6. ✓ Review and adjust timeout values
# 7. ✓ Test all endpoints under load
# 8. ✓ Configure backup and disaster recovery
# 9. ✓ Document incident response procedures
# 10. ✓ Set up automated health checks
#
# =================================================================================================
