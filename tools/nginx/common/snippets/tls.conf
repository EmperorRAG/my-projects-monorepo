# =================================================================================================
# TLS/SSL Configuration Snippet
# =================================================================================================
#
# This snippet contains optimal TLS/SSL settings for security and performance.
# Include this in server blocks that use HTTPS.
#
# Usage:
#   include /etc/nginx/snippets/tls.conf;
#
# =================================================================================================

# TLS Protocol Configuration
# Only allow TLS 1.2 and 1.3 for security
ssl_protocols TLSv1.2 TLSv1.3;

# Cipher Suite Configuration
# Modern, secure cipher suites prioritizing forward secrecy
# Supports TLS 1.2 and TLS 1.3
ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

# Let client choose cipher (recommended for TLS 1.3)
ssl_prefer_server_ciphers off;

# Session Configuration
# Shared cache for SSL sessions across workers
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;

# Disable session tickets for better security
# (prevents session resumption attacks)
ssl_session_tickets off;

# Diffie-Hellman Parameters
# Uncomment if using DHE ciphers (not needed for ECDHE-only)
# ssl_dhparam /etc/nginx/tls/dhparam.pem;

# OCSP Stapling
# Improves performance and privacy by stapling OCSP responses
ssl_stapling on;
ssl_stapling_verify on;

# DNS resolver for OCSP stapling
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;

# OCSP Response Cache
ssl_stapling_file /var/cache/nginx/ocsp.resp;

# Buffer Sizes (optimize for performance)
ssl_buffer_size 8k;

# =================================================================================================
# Security Headers for HTTPS
# =================================================================================================

# Strict Transport Security (HSTS)
# Forces browsers to use HTTPS for all future requests
# WARNING: Only enable after verifying HTTPS works correctly!
# Uncomment when ready for production:
# add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Additional security headers
add_header X-Content-Type-Options "nosniff" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-XSS-Protection "1; mode=block" always;

# Content Security Policy
# Customize based on your application needs
add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;

# Referrer Policy
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Permissions Policy (formerly Feature-Policy)
add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

# =================================================================================================
# TLS Certificate Configuration Notes
# =================================================================================================
#
# Certificate Paths:
#   ssl_certificate     /etc/nginx/tls/cert.pem;        # Full chain certificate
#   ssl_certificate_key /etc/nginx/tls/key.pem;         # Private key
#
# For Let's Encrypt:
#   ssl_certificate     /etc/nginx/tls/fullchain.pem;
#   ssl_certificate_key /etc/nginx/tls/privkey.pem;
#   ssl_trusted_certificate /etc/nginx/tls/chain.pem;   # For OCSP stapling
#
# Testing TLS Configuration:
#   https://www.ssllabs.com/ssltest/
#   https://securityheaders.com/
#
# =================================================================================================
