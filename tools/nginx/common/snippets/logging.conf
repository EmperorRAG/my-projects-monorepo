# =================================================================================================
# Logging Configuration Snippet
# =================================================================================================
#
# This snippet provides consistent logging configuration across all NGINX nodes.
#
# Usage:
#   include /etc/nginx/snippets/logging.conf;
#
# Features:
# - Structured logging for better parsing and analysis
# - Conditional logging to reduce noise
# - Performance metrics logging
# - Error tracking configuration
#
# =================================================================================================

# Extended log format with additional debugging information
# This format includes upstream details, cache status, and timing information
log_format detailed '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'upstream=$upstream_addr '
                    'cache=$upstream_cache_status '
                    'host=$host '
                    'request_id=$request_id';

# JSON log format for better parsing by log aggregation tools (ELK, Splunk, etc.)
log_format json_combined escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_connect_time":"$upstream_connect_time",'
        '"upstream_header_time":"$upstream_header_time",'
        '"request_id":"$request_id",'
        '"host":"$host",'
        '"scheme":"$scheme"'
    '}';

# Conditional logging - exclude health check endpoints from access logs
# This reduces log noise and improves performance
# Uncomment and adjust the patterns as needed:
#
# map $request_uri $loggable {
#     ~^/health 0;
#     ~^/healthz 0;
#     ~^/ready 0;
#     ~^/alive 0;
#     default 1;
# }
#
# Then in your server block, use:
# access_log /var/log/nginx/access.log detailed if=$loggable;

# Error log configuration with appropriate level
# Available levels: debug, info, notice, warn, error, crit, alert, emerg
# Use 'warn' for production, 'info' or 'debug' for troubleshooting
error_log /var/log/nginx/error.log warn;

# =================================================================================================
# Usage Examples
# =================================================================================================
#
# In your server block, you can use different log formats:
#
# For detailed text logging:
#   access_log /var/log/nginx/access.log detailed;
#
# For JSON logging (recommended for production):
#   access_log /var/log/nginx/access.log json_combined;
#
# For container environments (log to stdout/stderr):
#   access_log /dev/stdout detailed;
#   error_log /dev/stderr warn;
#
# To disable logging for specific locations:
#   access_log off;
#
# =================================================================================================
